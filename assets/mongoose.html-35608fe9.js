const n=JSON.parse(`{"key":"v-44db4230","path":"/zh/Server/mongoose.html","title":"Mongoose","lang":"zh-CN","frontmatter":{"title":"Mongoose","icon":"page","order":1,"author":"HCX","date":"2024-09-17T00:00:00.000Z","category":["Mongoose","Server"],"tag":["Mongoose"],"sticky":true,"star":true,"footer":"fly fly fly ~","description":"Mongoose 快速入门 Mongoose 是一个用于 Node.js 环境下操作 MongoDB 数据库的对象数据建模（ODM）工具。它提供了一套简便的 API，让开发者能够更轻松地与 MongoDB 进行交互。 创建连接、schema 与 modal 定义 连接 mongoose.connect 方法连接到 MongoDB 数据库，MongoDB的默认端口号为27017，这里也可以省略会默认指向27017的端口 // 引入依赖 const mongoose = require('mongoose'); // 连接到 MongoDB 数据库，mydatabase 为数据库的名称 mongoose.connect('mongodb://localhost:27017/mydatabase', { useNewUrlParser: true, // 设置 useNewUrlParser: true，手动启用新解析器，从而避免旧解析器的兼容性问题 useUnifiedTopology: true // 同上，消除兼容性的警告使用 }); // 通过 on 方法监听连接相应的事件，open、close、error等，具体可查官方文档 mongoose.connect.on(\\"open\\", () =&gt; { console.log(\\"已连接\\") })","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/Server/mongoose.html"}],["meta",{"property":"og:site_name","content":"飞船的博客"}],["meta",{"property":"og:title","content":"Mongoose"}],["meta",{"property":"og:description","content":"Mongoose 快速入门 Mongoose 是一个用于 Node.js 环境下操作 MongoDB 数据库的对象数据建模（ODM）工具。它提供了一套简便的 API，让开发者能够更轻松地与 MongoDB 进行交互。 创建连接、schema 与 modal 定义 连接 mongoose.connect 方法连接到 MongoDB 数据库，MongoDB的默认端口号为27017，这里也可以省略会默认指向27017的端口 // 引入依赖 const mongoose = require('mongoose'); // 连接到 MongoDB 数据库，mydatabase 为数据库的名称 mongoose.connect('mongodb://localhost:27017/mydatabase', { useNewUrlParser: true, // 设置 useNewUrlParser: true，手动启用新解析器，从而避免旧解析器的兼容性问题 useUnifiedTopology: true // 同上，消除兼容性的警告使用 }); // 通过 on 方法监听连接相应的事件，open、close、error等，具体可查官方文档 mongoose.connect.on(\\"open\\", () =&gt; { console.log(\\"已连接\\") })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-22T17:11:51.000Z"}],["meta",{"property":"article:author","content":"HCX"}],["meta",{"property":"article:tag","content":"Mongoose"}],["meta",{"property":"article:published_time","content":"2024-09-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-22T17:11:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mongoose\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-22T17:11:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HCX\\"}]}"]]},"headers":[{"level":2,"title":"创建连接、schema 与 modal 定义","slug":"创建连接、schema-与-modal-定义","link":"#创建连接、schema-与-modal-定义","children":[{"level":3,"title":"连接","slug":"连接","link":"#连接","children":[]},{"level":3,"title":"Shema 和 modal","slug":"shema-和-modal","link":"#shema-和-modal","children":[]}]},{"level":2,"title":"新增文档","slug":"新增文档","link":"#新增文档","children":[]},{"level":2,"title":"查询文档","slug":"查询文档","link":"#查询文档","children":[]},{"level":2,"title":"更新与删除","slug":"更新与删除","link":"#更新与删除","children":[{"level":3,"title":"调用原生的更新方法","slug":"调用原生的更新方法","link":"#调用原生的更新方法","children":[]},{"level":3,"title":"mongoose 更新功能扩展","slug":"mongoose-更新功能扩展","link":"#mongoose-更新功能扩展","children":[]},{"level":3,"title":"删除","slug":"删除","link":"#删除","children":[]}]},{"level":2,"title":"索引","slug":"索引","link":"#索引","children":[]}],"git":{"createdTime":1727025111000,"updatedTime":1727025111000,"contributors":[{"name":"HCX","email":"1874640833@qq.com","commits":1}]},"readingTime":{"minutes":8.97,"words":2690},"filePathRelative":"zh/Server/mongoose.md","localizedDate":"2024年9月17日","excerpt":"<h1> Mongoose 快速入门</h1>\\n<p>Mongoose 是一个用于 Node.js 环境下操作 MongoDB 数据库的对象数据建模（ODM）工具。它提供了一套简便的 API，让开发者能够更轻松地与 MongoDB 进行交互。</p>\\n<h2> 创建连接、schema 与 modal 定义</h2>\\n<h3> 连接</h3>\\n<p><code>mongoose.connect</code> 方法连接到 MongoDB 数据库，MongoDB的默认端口号为27017，这里也可以省略会默认指向27017的端口</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 引入依赖</span>\\n<span class=\\"token keyword\\">const</span> mongoose <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'mongoose'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 连接到 MongoDB 数据库，mydatabase 为数据库的名称</span>\\nmongoose<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">connect</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'mongodb://localhost:27017/mydatabase'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token literal-property property\\">useNewUrlParser</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 设置 useNewUrlParser: true，手动启用新解析器，从而避免旧解析器的兼容性问题</span>\\n   <span class=\\"token literal-property property\\">useUnifiedTopology</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token comment\\">// 同上，消除兼容性的警告使用</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// 通过 on 方法监听连接相应的事件，open、close、error等，具体可查官方文档</span>\\nmongoose<span class=\\"token punctuation\\">.</span>connect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"open\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"已连接\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
