const n=JSON.parse(`{"key":"v-564df85e","path":"/zh/DesignPattern/webpack.html","title":"Webpack 从入门开始","lang":"zh-CN","frontmatter":{"title":"Webpack 从入门开始","icon":"page","order":1,"author":"HCX","date":"2023-09-18T00:00:00.000Z","category":["Webpack"],"tag":["Webpack"],"sticky":true,"star":true,"footer":"fly fly fly ~","description":"Webpack 一、模块化演变过程 在早期没有工具和规范的情况下对模块化的落地方式 第一阶段 最开始各个页面通过 script 来引入，但是模块一旦多了后？ 例如有如下两个模块 var name = 'module-b' function method1 (){ console.log('xx') } function method2 (){ console.log('yy') } --- var name = 'module-a' function method1 (){ console.log('zz') } function method2 (){ console.log('mm') }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/DesignPattern/webpack.html"}],["meta",{"property":"og:site_name","content":"飞船的博客"}],["meta",{"property":"og:title","content":"Webpack 从入门开始"}],["meta",{"property":"og:description","content":"Webpack 一、模块化演变过程 在早期没有工具和规范的情况下对模块化的落地方式 第一阶段 最开始各个页面通过 script 来引入，但是模块一旦多了后？ 例如有如下两个模块 var name = 'module-b' function method1 (){ console.log('xx') } function method2 (){ console.log('yy') } --- var name = 'module-a' function method1 (){ console.log('zz') } function method2 (){ console.log('mm') }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-16T03:52:56.000Z"}],["meta",{"property":"article:author","content":"HCX"}],["meta",{"property":"article:tag","content":"Webpack"}],["meta",{"property":"article:published_time","content":"2023-09-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-16T03:52:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Webpack 从入门开始\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-16T03:52:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HCX\\"}]}"]]},"headers":[{"level":2,"title":"一、模块化演变过程","slug":"一、模块化演变过程","link":"#一、模块化演变过程","children":[]},{"level":2,"title":"二、模块化规范的出现","slug":"二、模块化规范的出现","link":"#二、模块化规范的出现","children":[]},{"level":2,"title":"三、ES Module","slug":"三、es-module","link":"#三、es-module","children":[]},{"level":2,"title":"四、 ES Module 环境支持","slug":"四、-es-module-环境支持","link":"#四、-es-module-环境支持","children":[]},{"level":2,"title":"五、模块化打包工具 Webpack","slug":"五、模块化打包工具-webpack","link":"#五、模块化打包工具-webpack","children":[]},{"level":2,"title":"六、原理 Loader","slug":"六、原理-loader","link":"#六、原理-loader","children":[{"level":3,"title":"1.介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":3,"title":"2. 开发一个 loader","slug":"_2-开发一个-loader","link":"#_2-开发一个-loader","children":[]},{"level":3,"title":"3. loader 分类","slug":"_3-loader-分类","link":"#_3-loader-分类","children":[]},{"level":3,"title":"4. loader Api","slug":"_4-loader-api","link":"#_4-loader-api","children":[]},{"level":3,"title":"5. 自定义 loader","slug":"_5-自定义-loader","link":"#_5-自定义-loader","children":[]}]},{"level":2,"title":"七、原理 plugin","slug":"七、原理-plugin","link":"#七、原理-plugin","children":[{"level":3,"title":"1 第一个 plugin","slug":"_1-第一个-plugin","link":"#_1-第一个-plugin","children":[]},{"level":3,"title":"2","slug":"_2","link":"#_2","children":[]}]},{"level":2,"title":"八、打包性能优化","slug":"八、打包性能优化","link":"#八、打包性能优化","children":[]},{"level":2,"title":"九、资源推荐","slug":"九、资源推荐","link":"#九、资源推荐","children":[]}],"git":{"createdTime":1718509976000,"updatedTime":1718509976000,"contributors":[{"name":"HCX","email":"1874640833@qq.com","commits":1}]},"readingTime":{"minutes":11.89,"words":3568},"filePathRelative":"zh/DesignPattern/webpack.md","localizedDate":"2023年9月18日","excerpt":"<h1> Webpack</h1>\\n<h2> 一、模块化演变过程</h2>\\n<p>在早期没有工具和规范的情况下对模块化的落地方式</p>\\n<ol>\\n<li>第一阶段</li>\\n</ol>\\n<p>最开始各个页面通过 script 来引入，但是模块一旦多了后？\\n例如有如下两个模块</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'module-b'</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">method1</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'xx'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">method2</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'yy'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token operator\\">--</span><span class=\\"token operator\\">-</span>\\n<span class=\\"token keyword\\">var</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'module-a'</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">method1</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'zz'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">method2</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'mm'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
